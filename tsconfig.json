{
    "compilerOptions": {
        "moduleResolution": "node",
        "target": "es5",
        "module": "esnext",
        "outDir": "./dist/types",
        "declaration": true,
        "declarationMap": true,
        "removeComments": false,
        "traceResolution": true,
        "lib": [
            "ES5",
            "ES6",
            "ES7",
            "ES2015",
            "ES2016",
            "ES2017",
            "ES2018",
            "ESNext",
            "ESNext.Symbol",
            "DOM",
            "DOM.Iterable",
            "ScriptHost"
        ] /* Specify library files to be included in the compilation. */,
        "allowJs": true /* Allow javascript files to be compiled. */,
        // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        "sourceMap": true /* Generates corresponding '.map' file. */,
        // "outFile": "./",                       /* Concatenate and emit output to single file. */
        /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
        "rootDir": "./src",
        // "composite": true,                     /* Enable project compilation */
        // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
        // "removeComments": true,                /* Do not emit comments to output. */
        "noEmit": false /* Do not emit outputs. */,
        "emitDeclarationOnly": false,
        "importHelpers": true /* Import emit helpers from 'tslib'. */,
        // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
        /* Strict Type-Checking Options */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
        // "strictNullChecks": true,              /* Enable strict null checks. */
        // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
        // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
        // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
        // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
        // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
        /* Additional Checks */
        // "noUnusedLocals": true,                /* Report errors on unused locals. */
        // "noUnusedParameters": true,            /* Report errors on unused parameters. */
        // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
        // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
        /* Module Resolution Options */
        "baseUrl": "." /* Base directory to resolve non-absolute module names. */,
        /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        // "paths": {},
        /* List of root folders whose combined content represents the structure of the project at runtime. */
        // "rootDirs": [],
        /* List of folders to include type definitions from. */
        // "typeRoots": [],
        /* Type declaration files to be included in compilation. */
        // "types": [],
        "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
        // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */
        /* Source Map Options */
        // "sourctypings/globals.test.d.ts          /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
        "inlineSourceMap": false /* Emit a single file with source maps instead of having a separate file. */,
        "inlineSources": false /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */,
        /* Experimental Options */
        "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
        "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
        /* Advanced Options */
        "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
    },
    "include": ["typings/*", "src/**/*.ts"],
    "exclude": ["dist/**/*", "coverage/**/*"]
}
